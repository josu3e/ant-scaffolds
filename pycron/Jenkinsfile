#!/usr/bin/env groovy

pipeline {
  agent any
  parameters {
    booleanParam(
      name: 'REGISTRY',
      defaultValue: false,
      description: "Requiere construir o no Registry in ECR")
    choice(
      name: 'ENV',
      choices:"dev\npre\nprod",
      description: "Ambiente de despliegue")
    choice(
      name: 'DEPLOY_REGION',
      choices:"eu-west-1\nus-west-2\nus-east-1",
      description: "Region de despliegue de aws")
    choice(
      name: 'INFRA_BUCKET',
      choices:"infraestructura.dev\ninfraestructura.pre\ninfraestructura.prod",
      description: "Bucker de recursos para el despliegue")
    choice(
      name: 'MEMORY_SIZE',
      choices:"128\n256\n512\n768\n1024\n2048",
      description: "Cantidad de memoria asignada al contenedor")
  }
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }
    stage('Set Enviroment') {
      steps {
        sh '''
          export ENV=$ENV
          export DEPLOY_REGION=$DEPLOY_REGION
          export DESIRED_COUNT=$DESIRED_COUNT
          export MIN_SCALING=$MIN_SCALING
          export MAX_SCALING=$MAX_SCALING
          export HTTP_PRIORITY=$HTTP_PRIORITY
          export HTTPS_PRIORITY=$HTTPS_PRIORITY
          export MEMORY_SIZE=$MEMORY_SIZE
          export INFRA_BUCKET=$INFRA_BUCKET
          '''
      }
    }
    stage('ECR') {
      steps {
        script {
          if ("${params.REGISTRY}" == "true") {
            sh 'make create-registry'
          }
        }
      }
    }
    stage('Install') {
      steps {
        sh 'make install'
      }
    }
    stage('Build') {
      steps {
        sh 'make build-latest'
      }
    }
    stage('Publish') {
      steps {
        sh 'make publish'
      }
    }
    stage('Deploy') {
      steps {
        sh 'make update-service'
      }
    }
  }
}
